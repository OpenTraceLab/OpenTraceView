name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            name: linux
          - os: macos-14
            name: macos
          - os: windows-2022
            name: windows
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Get latest OpenTraceCapture release
        id: otc-release
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: 'OpenTraceLab',
              repo: 'OpenTraceCapture'
            });
            const sortedReleases = releases.data.sort((a, b) => 
              new Date(b.created_at) - new Date(a.created_at)
            );
            const latestTag = sortedReleases[0].tag_name;
            core.setOutput('tag', latestTag);
            core.info(`Using OpenTraceCapture ${latestTag}`);

      - name: Get latest OpenTraceDecode release
        id: otd-release
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: 'OpenTraceLab',
              repo: 'OpenTraceDecode'
            });
            const sortedReleases = releases.data.sort((a, b) => 
              new Date(b.created_at) - new Date(a.created_at)
            );
            const latestTag = sortedReleases[0].tag_name;
            core.setOutput('tag', latestTag);
            core.info(`Using OpenTraceDecode ${latestTag}`);

      - name: Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build pkg-config gcc g++ ccache python3-pip \
            libglib2.0-dev libglibmm-2.4-dev libusb-1.0-0-dev libzip-dev libftdi1-dev \
            libserialport-dev libhidapi-dev libieee1284-3-dev \
            qt6-base-dev qt6-base-dev-tools libqt6svg6-dev qt6-tools-dev \
            libgl-dev libglu1-mesa-dev \
            libboost-serialization-dev libboost-system-dev libboost-stacktrace-dev
          pip3 install --user meson
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: macOS deps
        if: runner.os == 'macOS'
        run: |
          brew install meson ninja pkg-config ccache glib glibmm libusb libzip libftdi \
            hidapi libserialport qt6 boost

      - name: MSYS2 setup
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-ccache
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-glibmm
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-libzip
            mingw-w64-x86_64-libftdi
            mingw-w64-x86_64-libserialport
            mingw-w64-x86_64-hidapi
            mingw-w64-x86_64-qt6
            mingw-w64-x86_64-boost

      - name: Install OpenTraceCapture (Linux)
        if: runner.os == 'Linux'
        run: |
          wget -q https://github.com/OpenTraceLab/OpenTraceCapture/releases/download/${{ steps.otc-release.outputs.tag }}/opentracecapture-linux.tar.gz
          sudo tar xzf opentracecapture-linux.tar.gz -C /usr

      - name: Install OpenTraceDecode (Linux)
        if: runner.os == 'Linux'
        run: |
          wget -q https://github.com/OpenTraceLab/OpenTraceDecode/releases/download/${{ steps.otd-release.outputs.tag }}/opentracedecode-linux.tar.gz
          sudo tar xzf opentracedecode-linux.tar.gz -C /usr

      - name: Install OpenTraceCapture (macOS)
        if: runner.os == 'macOS'
        run: |
          wget -q https://github.com/OpenTraceLab/OpenTraceCapture/releases/download/${{ steps.otc-release.outputs.tag }}/opentracecapture-macos.tar.gz
          sudo tar xzf opentracecapture-macos.tar.gz -C /usr/local

      - name: Install OpenTraceDecode (macOS)
        if: runner.os == 'macOS'
        run: |
          wget -q https://github.com/OpenTraceLab/OpenTraceDecode/releases/download/${{ steps.otd-release.outputs.tag }}/opentracedecode-macos.tar.gz
          sudo tar xzf opentracedecode-macos.tar.gz -C /usr/local

      - name: Install OpenTraceCapture (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          wget -q https://github.com/OpenTraceLab/OpenTraceCapture/releases/download/${{ steps.otc-release.outputs.tag }}/opentracecapture-windows.tar.gz
          tar xzf opentracecapture-windows.tar.gz -C /mingw64

      - name: Install OpenTraceDecode (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          wget -q https://github.com/OpenTraceLab/OpenTraceDecode/releases/download/${{ steps.otd-release.outputs.tag }}/opentracedecode-windows.tar.gz
          tar xzf opentracedecode-windows.tar.gz -C /mingw64

      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "${{ runner.os }}" = "macOS" ]; then
            PREFIX=/usr/local
          else
            PREFIX=/usr
          fi
          meson setup build --buildtype=release --prefix=$PREFIX
          meson compile -C build
          DESTDIR="${PWD}/install" meson install -C build
          tar czf opentraceview-${{ matrix.name }}.tar.gz -C install$PREFIX .

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          meson setup build --buildtype=release --prefix=/mingw64
          meson compile -C build
          DESTDIR="${PWD}/install" meson install -C build
          MINGW_PATH=$(find install -type d -name mingw64 | head -1)
          tar czf opentraceview-${{ matrix.name }}.tar.gz -C $MINGW_PATH .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: opentraceview-${{ matrix.name }}
          path: opentraceview-${{ matrix.name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/opentraceview-*.tar.gz
          draft: false
          prerelease: true
